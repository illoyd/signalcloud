= form_for( @organization, :html => { :class => 'general' } ) do |f|
  = render partial: 'alert_errors', object: @organization.errors
  
  %ul.nav.nav-tabs{role: 'tablist'}
    %li.active= link_to 'Details', '#details', {role: 'tab', data: {toggle: 'tab'}}
    %li= link_to 'Billing Details', '#billing', {role: 'tab', data: {toggle: 'tab'}}
    %li= link_to 'Contact Details', '#contact', {role: 'tab', data: {toggle: 'tab'}}
    %li= link_to 'VAT', '#vat', {role: 'tab', data: {toggle: 'tab'}}

  .tab-content
    
    %fieldset#details.tab-pane.fade.in.active
      %legend Details
      .field{ has_error(@organization, :label) }
        = f.label :label
        .inputs= f.text_field :label
    
      .field{ has_error(@organization, :icon) }
        = f.label :icon
        .inputs= f.select :icon, ORGANIZATION_ICONS.map{ |x| [ x.humanize, x, { data: { icon: x } } ] }
    
      .field{ has_error(@organization, :description) }
        = f.label :description
        .inputs= f.text_area :description, rows: 3

    %fieldset#billing.tab-pane.fade
      %legend
        Billing Address
        %small (optional)
  
      .field{ has_error(@organization, :billing_first_name) }
        = f.label :billing_first_name, 'Given Name'
        .inputs= f.text_field :billing_first_name
  
      .field{ has_error(@organization, :billing_last_name) }
        = f.label :billing_last_name, 'Family Name'
        .inputs= f.text_field :billing_last_name
  
      .field{ has_error(@organization, :billing_email) }
        = f.label :billing_email, 'Email'
        .inputs= f.text_field :billing_email
        
      .field{ has_error(@organization, :billing_work_phone) }
        = f.label :billing_work_phone, 'Work Phone'
        .inputs= f.text_field :billing_work_phone
        
      .field{ has_error(@organization, :billing_line1) }
        = f.label :billing_line1, 'Address <small>(Line 1)</small>'.html_safe
        .inputs= f.text_field :billing_line1
        
      .field{ has_error(@organization, :billing_line2) }
        = f.label :billing_line2, 'Address <small>(Line 2)</small>'.html_safe
        .inputs= f.text_field :billing_line2
        
      .field{ has_error(@organization, :billing_city) }
        = f.label :billing_city, 'City'
        .inputs= f.text_field :billing_city
        
      .field{ has_error(@organization, :billing_region) }
        = f.label :billing_region, 'State/Provinence'
        .inputs= f.text_field :billing_region
        
      .field{ has_error(@organization, :billing_postcode) }
        = f.label :billing_postcode, 'Postal Code/ZIP'
        .inputs= f.text_field :billing_postcode
        
      .field{ has_error(@organization, :billing_country) }
        = f.label :billing_country, 'Country'
        .inputs= f.select :billing_country, ActionView::Helpers::FormOptionsHelper::COUNTRIES, include_blank: true

    %fieldset#contact.tab-pane.fade
      %legend
        Contact Address
        %small (optional)

      .field{ has_error(@organization, :use_billing_as_contact_address) }
        .actions
          = f.check_box :use_billing_as_contact_address
          = f.label :use_billing_as_contact_address, 'Use billing address as contact address'

      .field{ has_error(@organization, :contact_first_name) }
        = f.label :contact_first_name, 'Given Name'
        .inputs= f.text_field :contact_first_name, disabled: @organization.use_billing_as_contact_address
  
      .field{ has_error(@organization, :contact_last_name) }
        = f.label :contact_last_name, 'Family Name'
        .inputs= f.text_field :contact_last_name, disabled: @organization.use_billing_as_contact_address
  
      .field{ has_error(@organization, :contact_email) }
        = f.label :contact_email, 'Email'
        .inputs= f.text_field :contact_email, disabled: @organization.use_billing_as_contact_address
        
      .field{ has_error(@organization, :contact_work_phone) }
        = f.label :contact_work_phone, 'Work Phone'
        .inputs= f.text_field :contact_work_phone, disabled: @organization.use_billing_as_contact_address
        
      .field{ has_error(@organization, :contact_line1) }
        = f.label :contact_line1, 'Address <small>(Line 1)</small>'.html_safe
        .inputs= f.text_field :contact_line1, disabled: @organization.use_billing_as_contact_address
        
      .field{ has_error(@organization, :contact_line2) }
        = f.label :contact_line2, 'Address <small>(Line 2)</small>'.html_safe
        .inputs= f.text_field :contact_line2, disabled: @organization.use_billing_as_contact_address
        
      .field{ has_error(@organization, :contact_city) }
        = f.label :contact_city, 'City'
        .inputs= f.text_field :contact_city, disabled: @organization.use_billing_as_contact_address
        
      .field{ has_error(@organization, :contact_region) }
        = f.label :contact_region, 'State/Provinence'
        .inputs= f.text_field :contact_region, disabled: @organization.use_billing_as_contact_address
        
      .field{ has_error(@organization, :contact_postcode) }
        = f.label :contact_postcode, 'Postal Code/ZIP'
        .inputs= f.text_field :contact_postcode, disabled: @organization.use_billing_as_contact_address
        
      .field{ has_error(@organization, :contact_country) }
        = f.label :contact_country, 'Country'
        .inputs= f.select :contact_country, ActionView::Helpers::FormOptionsHelper::COUNTRIES, {include_blank: true}, disabled: @organization.use_billing_as_contact_address
        
    %fieldset#vat.tab-pane.fade
      %legend
        VAT Details
        %small (optional)
      
      .field{ has_error(@organization, :vat_name) }
        = f.label :vat_name, 'VAT Registered Name'
        .inputs= f.text_field :vat_name
  
      .field{ has_error(@organization, :vat_number) }
        = f.label :vat_number, 'VAT Number'
        .inputs= f.text_field :vat_number

  .field
    .actions
      = f.submit
      = link_to 'Discard changes', @organization, class: 'cancel'

:coffeescript
  $("#organization_use_billing_as_contact_address").click ->
    disabled = this.checked
    $("[id*='organization_contact_']").each ->
      if disabled
        $(this).attr "disabled", "disabled"
      else
        $(this).removeAttr "disabled"
      return
    return
